services:
  # Consul for service discovery and metadata
  consul:
    image: hashicorp/consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    volumes:
      - consul-data:/consul/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 5s
      timeout: 5s
      retries: 3

  # HashiCorp Vault server
  vault:
    image: hashicorp/vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-only-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    command: server -dev -dev-root-token-id=dev-only-token
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - app-network
    depends_on:
      consul:
        condition: service_healthy

  # Vault & Consul initialization service
  init-service:
    image: hashicorp/vault:1.13.3
    container_name: init-service
    depends_on:
      vault:
        condition: service_healthy
      consul:
        condition: service_healthy
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: dev-only-token
      CONSUL_HTTP_ADDR: http://consul:8500
    volumes:
      - ./init:/scripts
      - ./secrets:/secrets
    entrypoint: /bin/sh
    command: /scripts/init.sh
    networks:
      - app-network

  # Secret management API service
  secret-management-api:
    build:
      context: ./secret-management-api
      dockerfile: Dockerfile
    container_name: secret-management-api
    ports:
      - "8300:8300"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_ROLE_ID: ${SECRET_API_ROLE_ID:-secret-api-role-id}
      VAULT_SECRET_ID: ${SECRET_API_SECRET_ID:-secret-api-secret-id}
      CONSUL_HTTP_ADDR: http://consul:8500
      SERVICE_PORT: 8300
    depends_on:
      init-service:
        condition: service_completed_successfully
    networks:
      - app-network

  # Sample service that uses secrets
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8080:8080"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_ROLE_ID: ${AUTH_SERVICE_ROLE_ID:-auth-service-role-id}
      VAULT_SECRET_ID: ${AUTH_SERVICE_SECRET_ID:-auth-service-secret-id}
      CONSUL_HTTP_ADDR: http://consul:8500
      SERVICE_PORT: 8080
    depends_on:
      init-service:
        condition: service_completed_successfully
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  consul-data:
