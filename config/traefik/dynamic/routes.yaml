http:
  routers:
    # API gateway router - default catch-all for API requests
    api-gateway:
      rule: "Host(`api.example.com`)"
      service: api-service
      entryPoints:
        - websecure
      middlewares:
        - security-headers
        - rate-limit
      tls: {}
    
    # Dashboard secure router
    dashboard:
      rule: "Host(`traefik.example.com`)"
      service: api@internal
      entryPoints:
        - websecure
      middlewares:
        - jwt-auth
      tls: {}
      
    # Example specific API service router
    example-service:
      rule: "Host(`api.example.com`) && PathPrefix(`/example`)"
      service: example-service
      entryPoints:
        - websecure
      middlewares:
        - security-headers
        - rate-limit
        - retry-middleware
        - circuit-breaker
      tls: {}

  services:
    # Default API service (this would typically be discovered via Consul)
    # api-service:
    #   loadBalancer:
    #     healthCheck:
    #       path: /health
    #       interval: "10s"
    #       timeout: "3s"
    #     passHostHeader: true
    #     responseForwarding:
    #       flushInterval: "100ms"
    #     servers:
    #       - url: "http://api-gateway:8080"
    
    # Example service (this would typically be discovered via Consul)
    example-service:
      loadBalancer:
        healthCheck:
          path: /health
          interval: "10s"
          timeout: "3s"
        passHostHeader: true
        sticky:
          cookie:
            name: example_sticky
            secure: true
        servers:
          - url: "http://example-service:8081"
